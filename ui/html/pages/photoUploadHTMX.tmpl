<form id="form" hx-post='/photos/upload' hx-encoding="multipart/form-data" novalidate>
    <!-- Include the CSRF token -->
    <input type='hidden' name='csrf_token' value='{{.CSRFToken}}'>
    {{range .Form.NonFieldErrors}}
        <div class='error'>{{.}}</div>
    {{end}}
    <div>
        <label>Event:</label>
        {{with .Form.FieldErrors.event}}
            <label class='error'>{{.}}</label>
        {{end}}
        <select value='{{.Form.Event}}' type="event" name="event">
        {{range .Events}}
        <option value="{{.ID}}">{{.Name}}{{with .Date}} [{{Day .}}]{{end}}</option>
        {{end}}
        </select>
    </div>
    <div>
        <label>Files:</label>
        {{with .Form.FieldErrors.files}}
            <label class='error'>{{.}}</label>
        {{end}}
        <input type='file' name='files' multiple>
    </div>
    <button id="btn">Upload</button>
    <progress id='progress' value='0' max='100'></progress>
</form>
<script>
    htmx.on('#form', 'htmx:xhr:progress', function(evt) {
        var posterr = htmx.find('#postErr')
        if (posterr != null) {
            posterr.remove()
        }

        htmx.find('#btn').style.display = "none"
        htmx.find('#progress').setAttribute('value', evt.detail.loaded/evt.detail.total * 100)
        if (evt.detail.loaded/evt.detail.total * 100 == 100) {
            htmx.find('#progress').removeAttribute('value')
        }
    });

    htmx.on("htmx:responseError", function (e) {
        htmx.find('#progress').setAttribute('value', 0)
        htmx.find('#btn').style.display = "inline"

        var posterr = htmx.find('#postErr')
        if (posterr == null) {
            var f = htmx.find('#form')
            const newDiv = document.createElement("div");
            const text = document.createTextNode('Server Error');
            newDiv.appendChild(text)
            newDiv.id = 'postErr'
            newDiv.style.display = 'inline'
            f.parentNode.insertBefore(newDiv, f);
        }

        console.error(e);
    })
</script>
